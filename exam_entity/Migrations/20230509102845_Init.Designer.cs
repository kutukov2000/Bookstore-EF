// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using exam_entity;

#nullable disable

namespace exam_entity.Migrations
{
    [DbContext(typeof(BookShopDbContext))]
    [Migration("20230509102845_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("exam_entity.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 12,
                            Name = "Ernest Hemingway"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 12,
                            Name = "F. Scott Fitzgerald"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 11,
                            Name = "Virginia Woolf"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 11,
                            Name = "George Orwell"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 11,
                            Name = "J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            Name = "Ivan Franko"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            Name = "Lesya Ukrainka"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            Name = "Nikolai Gogol"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            Name = "Taras Shevchenko"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 3,
                            Name = "Franz Kafka"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 3,
                            Name = "Thomas Mann"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 3,
                            Name = "Hermann Hesse"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 3,
                            Name = "Johann Wolfgang von Goethe"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 15,
                            Name = "Gabriel Garcia Marquez"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 19,
                            Name = "Mario Vargas Llosa"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 19,
                            Name = "Isabel Allende"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 20,
                            Name = "Haruki Murakami"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 20,
                            Name = "Yukio Mishima"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 12,
                            Name = "Jhumpa Lahiri"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 12,
                            Name = "Toni Morrison"
                        });
                });

            modelBuilder.Entity("exam_entity.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Cost = 0.0,
                            GenreId = 1,
                            Pages = 0,
                            Price = 10.99,
                            PublicationYear = 1952,
                            Title = "The Old Man and the Sea"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Cost = 0.0,
                            GenreId = 1,
                            Pages = 0,
                            Price = 12.99,
                            PublicationYear = 1925,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Cost = 0.0,
                            GenreId = 1,
                            Pages = 0,
                            Price = 8.9900000000000002,
                            PublicationYear = 1927,
                            Title = "To the Lighthouse"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Cost = 0.0,
                            GenreId = 2,
                            Pages = 0,
                            Price = 9.9900000000000002,
                            PublicationYear = 1949,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            Cost = 0.0,
                            GenreId = 3,
                            Pages = 0,
                            Price = 20.989999999999998,
                            PublicationYear = 1954,
                            Title = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            Cost = 0.0,
                            GenreId = 4,
                            Pages = 0,
                            Price = 5.9900000000000002,
                            PublicationYear = 1882,
                            Title = "Zahar Berkut"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 7,
                            Cost = 0.0,
                            GenreId = 4,
                            Pages = 0,
                            Price = 7.9900000000000002,
                            PublicationYear = 1911,
                            Title = "Forest Song"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            Cost = 0.0,
                            GenreId = 4,
                            Pages = 0,
                            Price = 9.9900000000000002,
                            PublicationYear = 1842,
                            Title = "Dead Souls"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 9,
                            Cost = 0.0,
                            GenreId = 4,
                            Pages = 0,
                            Price = 6.9900000000000002,
                            PublicationYear = 1840,
                            Title = "Kobzar"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            Cost = 0.0,
                            GenreId = 5,
                            Pages = 0,
                            Price = 11.99,
                            PublicationYear = 1925,
                            Title = "The Trial"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 11,
                            Cost = 0.0,
                            GenreId = 5,
                            Pages = 0,
                            Price = 14.99,
                            PublicationYear = 1924,
                            Title = "The Magic Mountain"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 12,
                            Cost = 0.0,
                            GenreId = 5,
                            Pages = 0,
                            Price = 8.9900000000000002,
                            PublicationYear = 1922,
                            Title = "Siddhartha"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 13,
                            Cost = 0.0,
                            GenreId = 6,
                            Pages = 0,
                            Price = 9.9900000000000002,
                            PublicationYear = 1808,
                            Title = "Faust"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 14,
                            Cost = 0.0,
                            GenreId = 1,
                            Pages = 0,
                            Price = 9.9900000000000002,
                            PublicationYear = 1932,
                            Title = "Brave New World"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 15,
                            Cost = 0.0,
                            GenreId = 2,
                            Pages = 0,
                            Price = 10.99,
                            PublicationYear = 1866,
                            Title = "Crime and Punishment"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 16,
                            Cost = 0.0,
                            GenreId = 3,
                            Pages = 0,
                            Price = 7.9900000000000002,
                            PublicationYear = 1813,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 17,
                            Cost = 0.0,
                            GenreId = 4,
                            Pages = 0,
                            Price = 12.99,
                            PublicationYear = 1862,
                            Title = "Les Misérables"
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 18,
                            Cost = 0.0,
                            GenreId = 2,
                            Pages = 0,
                            Price = 11.99,
                            PublicationYear = 1880,
                            Title = "The Brothers Karamazov"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 19,
                            Cost = 0.0,
                            GenreId = 4,
                            Pages = 0,
                            Price = 14.99,
                            PublicationYear = 1869,
                            Title = "War and Peace"
                        });
                });

            modelBuilder.Entity("exam_entity.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 4,
                            Name = "France"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Norway"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Finland"
                        },
                        new
                        {
                            Id = 11,
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 12,
                            Name = "United States"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 18,
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = 19,
                            Name = "China"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Japan"
                        });
                });

            modelBuilder.Entity("exam_entity.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Historical"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Psychological"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 18,
                            Name = "War"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Political"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Documentary"
                        });
                });

            modelBuilder.Entity("exam_entity.Entities.Author", b =>
                {
                    b.HasOne("exam_entity.Entities.Country", "Country")
                        .WithMany("Authors")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("exam_entity.Entities.Book", b =>
                {
                    b.HasOne("exam_entity.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("exam_entity.Entities.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("exam_entity.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("exam_entity.Entities.Country", b =>
                {
                    b.Navigation("Authors");
                });

            modelBuilder.Entity("exam_entity.Entities.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
